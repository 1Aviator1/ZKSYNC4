name: Lint + Unit Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45
          working-directory: .
          args: --timeout 3m
      - name: Install license check
        run: go install github.com/google/addlicense@v1.0.0
      - name: Check license
        run: addlicense -f ./LICENSE.header -check -v ./**/*.go ./**/**/*.go ./**/**/**/*.go
  test:
    name: Golang Unit Tests v${{ matrix.go }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.18"]
        os: [ubuntu-20.04, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - run: go mod download
      - run: scripts/build.sh
      - run: go test -v -coverprofile=coverage.out $(go list ./... | grep -v /tests/)
      - run: go tool cover -func=coverage.out
  e2e_test:
    name: e2e tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.18"]
        os: [ubuntu-20.04, macos-latest]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Yarn install
        run: yarn
        working-directory: ./tests/e2e/hardhat
      - name: Run e2e tests
        shell: bash
        run: scripts/run.e2e.sh
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cli-logs-${{ matrix.os }}
          path: |
            ~/.avalanche-cli/
            !~/.avalanche-cli/bin/
            !~/.avalanche-cli/snapshots
          retention-days: 5
