name: Release (with lint and test)

on:
  push:
    tags:
      - "*"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45
          working-directory: .
          args: --timeout 3m
      - name: Install license check
        run: go install github.com/google/addlicense@v1.0.0
      - name: Check license
        run: addlicense -f ./LICENSE.header -check -v ./**/*.go
  test:
    name: Golang Unit Tests v${{ matrix.go }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.18"]
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - run: go mod download
      - run: scripts/build.sh
      - run: go test -v -coverprofile=coverage.out ./...
        env:
          CGO_FLAGS: "-O -D__BLST_PORTABLE__"
      - run: go tool cover -func=coverage.out
  release:
    needs: [lint, test]
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Set up arm64 cross compiler
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Checkout osxcross
        uses: actions/checkout@v2
        with:
          repository: tpoechtrager/osxcross
          path: osxcross
      - name: Build osxcross
        run: |
          cd osxcross
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz -O tarballs/MacOSX11.3.sdk.tar.xz
          UNATTENDED=1 ./build.sh
          echo $PWD/target/bin >> $GITHUB_PATH
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          #https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

